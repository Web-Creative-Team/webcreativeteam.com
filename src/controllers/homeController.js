const router = require('express').Router();
const bannersManager = require('../managers/bannersManager');
const transporter = require('../managers/emailManager');


const { hasForbiddenChars } = require('../utils/validationHelpers')

router.get('/', async (req, res, next) => {
    let banners = await bannersManager.getAll();
    try {
        const { notifyMessage, notifyClass } = req.query;

        res.render('home', {
            showSectionServices: true,
            showCarousel: true,
            banners,
            title: "–ò–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å–∞–π—Ç | –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∞–≥–µ–Ω—Ü–∏—è | WebCreativeTeam",
            description: "–¶—è–ª–æ—Å—Ç–Ω–∏ —Ä–µ—à–µ–Ω–∏—è –∑–∞ –∏–∑—Ä–∞–±–æ—Ç–≤–∞–Ω–µ –Ω–∞ —É–µ–±—Å–∞–π—Ç –∏ –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω. –ò–∑–≥–æ–¥–Ω–∏ —Ü–µ–Ω–∏, –ø—Ä–æ–º–æ—Ü–∏–∏ –∏ –æ—Ç—Å—Ç—ä–ø–∫–∏. ",
            notifyMessage,
            notifyClass,
        });
    } catch (error) {
        next(error);
    }
});

router.get('/prices', async (req, res, next) => {
    try {
        let banners = await bannersManager.getAll();
        res.render('prices', {
            title: "–¶–µ–Ω–∏ –∏ –ø—Ä–æ–º–æ—Ü–∏–∏ –Ω–∞ —É–µ–±—Å–∞–π—Ç | –£–µ–± –º–∞–≥–∞–∑–∏–Ω–∏ | WebCreativeTeam",
            description: "–¶—è–ª–æ—Å—Ç–Ω–∏ —Ä–µ—à–µ–Ω–∏—è –∑–∞ –∏–∑—Ä–∞–±–æ—Ç–≤–∞–Ω–µ –Ω–∞ —É–µ–±—Å–∞–π—Ç –∏ –æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω. –ò–∑–≥–æ–¥–Ω–∏ —Ü–µ–Ω–∏, –ø—Ä–æ–º–æ—Ü–∏–∏ –∏ –æ—Ç—Å—Ç—ä–ø–∫–∏.",
            banners,
            showCarousel: true,
            showSectionServices: true,
        });
    } catch (error) {
        next(error);
    }
});

router.get('/contacts', async (req, res, next) => {
    try {
        let banners = await bannersManager.getAll();
        res.render('contactUs', {
            showCarousel: true,
            banners,
            title: "–ö–æ–Ω—Ç–∞–∫—Ç–∏ –∏ –≤—Ä—ä–∑–∫–∞ —Å –µ–∫–∏–ø–∞ | WebCreativeTeam",
            description: "–ó–∞ –ø–æ–≤–µ—á–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ–Ω—Ç–∞–∫—Ç–∏ –∏ –≤—Ä—ä–∑–∫–∞ —Å –µ–∫–∏–ø–∞ –Ω–∞ WebCreativeTeam"
        });
    } catch (error) {
        console.log(error);

    }
});

const validateEmail = (email) => {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return regex.test(email);
};

router.post('/contacts', async (req, res, next) => {
    const { email, name, phone, message } = req.body;

    console.log("üì© –ü–æ–ª—É—á–µ–Ω–∞ –∑–∞—è–≤–∫–∞ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç:");
    console.log("üîπ Name:", name);
    console.log("üîπ Email:", email);
    console.log("üîπ Phone:", phone || "Not provided");
    console.log("üîπ Message:", message);

    // 1) Basic checks
    if (!email || !name || !message) {
        console.log("‚ùå –ì—Ä–µ—à–∫–∞: –õ–∏–ø—Å–≤–∞—Ç –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–ª–µ—Ç–∞.");
        return res.status(400).render('contactUs', {
            error: '–í—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∞ –æ—Ç–±–µ–ª—è–∑–∞–Ω–∏ —Å—ä—Å * —Å–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏.',
            name,
            email,
            phone,
            message
        });
    }

    if (hasForbiddenChars(email) || hasForbiddenChars(name) || hasForbiddenChars(phone) || hasForbiddenChars(message)) {
        console.log("‚ùå –ì—Ä–µ—à–∫–∞: –ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ –Ω–∞ –∑–∞–±—Ä–∞–Ω–µ–Ω–∏ —Å–∏–º–≤–æ–ª–∏.");
        return res.status(400).render('contactUs', {
            error: '–ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ –Ω–∞ –∑–∞–±—Ä–∞–Ω–µ–Ω–∏ —Å–∏–º–≤–æ–ª–∏!',
            name,
            email,
            phone,
            message
        });
    }

    if (name.length < 2) {
        console.log("‚ùå –ì—Ä–µ—à–∫–∞: –ò–º–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 2 —Å–∏–º–≤–æ–ª–∞.");
        return res.status(400).render('contactUs', {
            error: '–ò–º–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ 2 —Å–∏–º–≤–æ–ª–∞',
            name,
            email,
            phone,
            message
        });
    }

    if (message.length < 10) {
        console.log("‚ùå –ì—Ä–µ—à–∫–∞: –°—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 10 —Å–∏–º–≤–æ–ª–∞.");
        return res.status(400).render('contactUs', {
            error: '–°—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ 10 —Å–∏–º–≤–æ–ª–∞',
            name,
            email,
            phone,
            message
        });
    }

    const mailOptions = {
        from: email,
        to: 'info@webcreativeteam.com',
        subject: `From Contact form - new Message from ${name}`,
        html: `
          <p>You have a new message from the contact form:</p>
          <p><strong>Name:</strong> ${name}</p>
          <p><strong>Email:</strong> ${email}</p>
          <p><strong>Phone:</strong> ${phone || 'Not provided'}</p>
          <p><strong>Message:</strong> ${message}</p>
        `
    };

    try {
        console.log("üìß –û–ø–∏—Ç –∑–∞ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª...");
        let info = await transporter.sendMail(mailOptions);
        console.log("‚úÖ –ò–º–µ–π–ª –∏–∑–ø—Ä–∞—Ç–µ–Ω —É—Å–ø–µ—à–Ω–æ:", info.messageId);

        // SUCCESS -> Redirect to home page with success message
        return res.redirect('/?notifyMessage=–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º! –©–µ –≤–∏ –æ—Ç–≥–æ–≤–æ—Ä–∏–º –≤—ä–∑–º–æ–∂–Ω–æ –Ω–∞–π-–±—ä—Ä–∑–æ!&messageText=green');
    } catch (error) {
        console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª:", error);

        // ERROR -> Rerender contactUs with red error
        return res.render('contactUs', {
            error: '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—Ä–∞—â–∞–Ω–µ –Ω–∞ –∏–º–µ–π–ª. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.',
            name,
            email,
            phone,
            message,
        });
    }
});


module.exports = router;
